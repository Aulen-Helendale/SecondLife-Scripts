////////////////////////////////////////////////////////////////
// Open Basic Follower/Facing Script, by Logan Bauer. //
////////////////////////////////////////////////////////////////
// OFFSET is the position of your pet in relation to it's owner's position.
// For example, in the default setting below, "vector offset =<-1,0,1>;"
// I.E. (x,y,z), the -1 puts it 1m back behind owner, the 0 means don't have
// it stay left or right, and 1 means have it stay 1m above it's owner.
// So, if you wanted the script to make it follow directly in front of you,
// and to the left, then you would change it to "vector offset =<1,1,0>;"

//vector initialPosition = <232, 29, 27.7>;

vector offset =<-2,0,-.1>;
vector offsetRot = <0,0,0>;
integer following = 0;
integer channel = 0;
integer angleInc = 30;

startup()
{
  vector pos = llGetPos();
  llSetStatus(STATUS_ROTATE_Z,TRUE);
  llSetStatus(STATUS_PHYSICS, TRUE);
  key id = llGetOwner();
  llSensorRemove();
  //llSetPos(initialPosition);
  llCollisionSound("",0.0);  //turn off collision sound
  llCollisionFilter("", NULL_KEY, FALSE);
}

default
{
  state_entry()
  {
      startup();
  }

  touch_start(integer total_number)
  {
    if (following == 0)
    {
      llSetStatus(STATUS_PHYSICS, TRUE);
      llSensorRepeat("",llDetectedKey(0),AGENT,200,2*PI,.001);
      following = 1;
      //llListen(channel,"","","");
    }
    else
    {
      llSetStatus(STATUS_PHYSICS, FALSE);
      llSensorRemove();
      following = 0;
    }
  }

  on_rez(integer start_param)
  {
    startup();
  }

  sensor(integer total_number)
  {
    //vector pos = llDetectedPos(0);
    //rotation rot = llDetectedRot(0)*(llEuler2Rot(offsetRot*DEG_TO_RAD));
    //llMoveToTarget(pos+offset*llDetectedRot(0),.2);
    //llMoveToTarget(pos+offset,.2);
    //llRotLookAt(rot, .1 , 5);
    //llLookAt(pos, .1, 5);
    //llSetBuoyancy(.2);
    vector pos = llDetectedPos(0);
    rotation rot = llDetectedRot(0);
    vector worldOffset = offset;
    vector avOffset = offset * rot;
    pos += avOffset;
    llMoveToTarget(pos, 1);
    //llSetPos(pos);
    llLookAt(llDetectedPos(0), 2, .2);
  }

  listen(integer channel, string name, key id, string message)
  {
    if (message == "X" || message == "x")
      offsetRot.x += angleInc;
    else if (message == "-X" || message == "-x")
      offsetRot.x -= angleInc;
    if (message == "Y" || message == "y")
      offsetRot.y += angleInc;
    else if (message == "-Y" || message == "-y")
      offsetRot.y -= angleInc;
    if (message == "Z" || message == "z")
      offsetRot.z += angleInc;
    else if (message == "-Z" || message == "-z")
      offsetRot.z -= angleInc;
  }
}